%import common.WS
%ignore WS

//========================================
// Top-level formulas and expressions

?formula : "=" compare_expr

?expression : add_expr | concat_expr | function_expr

//========================================
// Arithmetic expressions

// This generates right-deep trees:  ?add_expr : mul_expr (ADD_OP add_expr)?
// Instead we would prefer to generate left-deep trees when given a sequence
// of operators at the same precedence level.
?add_expr : (add_expr ADD_OP)? mul_expr

?mul_expr : (mul_expr MUL_OP)? unary_op

?unary_op : ADD_OP? base

//========================================
// String concatenation

?concat_expr : (concat_expr "&")? base

//========================================
// Boolean Operation
// Least precedence, so put before add_expr and concat_expr (expression).

?compare_expr : (expression BOOL_OP)? expression

//========================================
// Function calling
?function_expr : (FUNC_CALL arg_list)

//========================================


// Base values

?base : cell
      | NUMBER -> number
      | STRING -> string
      | BOOL -> bool
      | "(" expression ")"
      | "(" compare_expr ")"
      | function_expr



?arg_list: "(" (compare_expr | cell_range)* ("," (compare_expr | cell_range))* ")"


cell_range : (_sheetname "!")? CELLRANGE

cell : (_sheetname "!")? CELLREF

_sheetname : NAME | QUOTED_NAME

//========================================
// Lexer terminals

// Specify the operators as separately named lexer rules so that they aren't
// discarded from the resulting parse tree.

ADD_OP: ("+" | "-")
MUL_OP: ("*" | "/")
BOOL_OP: ("==" | "<>" | "!=" | ">=" | "<=" | ">" | "<" | "=" )
FUNC_CALL: /[A-Za-z][_A-Za-z0-9]*/


// Lexer rules for different kinds of terminals

CELLREF: /[$]?[A-Za-z]+[$]?[1-9][0-9]*/

NAME: /[A-Za-z][A-Za-z0-9]*/

QUOTED_NAME: /\'[^']*\'/

CELLRANGE: CELLREF ":" CELLREF

// Don't need to support signs on numbers because we have unary +/- operator
// support in the parser.
NUMBER: /([0-9]+(\.[0-9]*)?)|(\.[0-9]+)/

STRING: /\"[^"]*\"/

BOOL: /[Tt][Rr][Uu][Ee]/ | /[Ff][Aa][Ll][Ss][Ee]/
